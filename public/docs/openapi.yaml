openapi: 3.0.3
info:
  title: 'Tickets Please API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://tickets-please.laravel'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: "Authenticate user and return the user's API token"
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"Authenticated\",\n\"data\": {\n\"token\": \"{YOUR_AUTH_KEY}\"\n},\n\"status\": 200"
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gabe30@example.com
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: "rK}(Cj'8^f"
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: Loout
      operationId: loout
      description: 'Signs out the user and destroys the API token'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - Authentication
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 11
                  name: 'The manager'
                  email: manager@test.com
                  email_verified_at: '2024-07-16T08:48:53.000000Z'
                  is_manager: true
                  created_at: '2024-07-16T08:48:53.000000Z'
                  updated_at: '2024-07-16T08:48:53.000000Z'
                properties:
                  id:
                    type: integer
                    example: 11
                  name:
                    type: string
                    example: 'The manager'
                  email:
                    type: string
                    example: manager@test.com
                  email_verified_at:
                    type: string
                    example: '2024-07-16T08:48:53.000000Z'
                  is_manager:
                    type: boolean
                    example: true
                  created_at:
                    type: string
                    example: '2024-07-16T08:48:53.000000Z'
                  updated_at:
                    type: string
                    example: '2024-07-16T08:48:53.000000Z'
      tags:
        - Endpoints
  '/api/v1/tickets/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: ticket
                    id: 1
                    attributes:
                      title: 'animi repudiandae ut'
                      description: 'Autem distinctio enim provident et dolores excepturi. Odit eaque non voluptatem quaerat repellat. Labore et optio voluptatem. Dolores nisi ut omnis est aut placeat veritatis pariatur.'
                      status: H
                      createdAt: '2024-07-16T08:48:45.000000Z'
                      updatedAt: '2024-07-16T08:48:45.000000Z'
                    relationships:
                      author:
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/9'
                        data:
                          type: user
                          id: 9
                    links:
                      self: 'http://tickets-please.laravel/api/v1/tickets/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: ticket
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                            example: 'animi repudiandae ut'
                          description:
                            type: string
                            example: 'Autem distinctio enim provident et dolores excepturi. Odit eaque non voluptatem quaerat repellat. Labore et optio voluptatem. Dolores nisi ut omnis est aut placeat veritatis pariatur.'
                          status:
                            type: string
                            example: H
                          createdAt:
                            type: string
                            example: '2024-07-16T08:48:45.000000Z'
                          updatedAt:
                            type: string
                            example: '2024-07-16T08:48:45.000000Z'
                      relationships:
                        type: object
                        properties:
                          author:
                            type: object
                            properties:
                              links:
                                type: object
                                properties:
                                  self:
                                    type: string
                                    example: 'http://tickets-please.laravel/api/v1/authors/9'
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: user
                                  id:
                                    type: integer
                                    example: 9
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://tickets-please.laravel/api/v1/tickets/1'
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tickets/{ticket}':
    put:
      summary: ''
      operationId: putApiV1TicketsTicket
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: dolore
                        description:
                          type: string
                          description: ''
                          example: 'Dolore quibusdam qui sed voluptatem molestiae.'
                        status:
                          type: string
                          description: ''
                          example: C
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 11
    parameters:
      -
        in: path
        name: ticket
        description: 'The ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tickets/{ticket_id}':
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: alias
                        description:
                          type: string
                          description: ''
                          example: 'Quis illum quidem earum voluptatem sapiente.'
                        status:
                          type: string
                          description: ''
                          example: A
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 11
    parameters:
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Karlie Langworth'
                        email: ohara.johnathan@example.org
                        isManager: false
                      links:
                        self: 'http://tickets-please.laravel/api/v1/authors/1'
                    -
                      type: user
                      id: 2
                      attributes:
                        name: 'Maxie Schroeder'
                        email: duncan17@example.net
                        isManager: false
                      links:
                        self: 'http://tickets-please.laravel/api/v1/authors/2'
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Josue Osinski DDS'
                        email: orie23@example.net
                        isManager: false
                      links:
                        self: 'http://tickets-please.laravel/api/v1/authors/3'
                    -
                      type: user
                      id: 4
                      attributes:
                        name: 'Cullen Braun'
                        email: vjast@example.com
                        isManager: false
                      links:
                        self: 'http://tickets-please.laravel/api/v1/authors/4'
                    -
                      type: user
                      id: 5
                      attributes:
                        name: 'Dr. Michele Wilkinson'
                        email: clara.smith@example.com
                        isManager: false
                      links:
                        self: 'http://tickets-please.laravel/api/v1/authors/5'
                    -
                      type: user
                      id: 6
                      attributes:
                        name: 'Arlo Prosacco'
                        email: qlakin@example.org
                        isManager: false
                      links:
                        self: 'http://tickets-please.laravel/api/v1/authors/6'
                    -
                      type: user
                      id: 7
                      attributes:
                        name: 'Bernice Schulist II'
                        email: mcclure.branson@example.com
                        isManager: false
                      links:
                        self: 'http://tickets-please.laravel/api/v1/authors/7'
                    -
                      type: user
                      id: 8
                      attributes:
                        name: 'Dr. Dino Price III'
                        email: jenkins.delta@example.net
                        isManager: false
                      links:
                        self: 'http://tickets-please.laravel/api/v1/authors/8'
                    -
                      type: user
                      id: 9
                      attributes:
                        name: 'Hilton Cummerata'
                        email: emma.cummerata@example.com
                        isManager: false
                      links:
                        self: 'http://tickets-please.laravel/api/v1/authors/9'
                    -
                      type: user
                      id: 10
                      attributes:
                        name: 'Katlyn Hansen'
                        email: garret.osinski@example.net
                        isManager: false
                      links:
                        self: 'http://tickets-please.laravel/api/v1/authors/10'
                    -
                      type: user
                      id: 11
                      attributes:
                        name: 'The manager'
                        email: manager@test.com
                        isManager: true
                      links:
                        self: 'http://tickets-please.laravel/api/v1/authors/11'
                  links:
                    first: 'http://tickets-please.laravel/api/v1/users?page=1'
                    last: 'http://tickets-please.laravel/api/v1/users?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://tickets-please.laravel/api/v1/users?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://tickets-please.laravel/api/v1/users'
                    per_page: 15
                    to: 11
                    total: 11
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Karlie Langworth'
                          email: ohara.johnathan@example.org
                          isManager: false
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/1'
                      -
                        type: user
                        id: 2
                        attributes:
                          name: 'Maxie Schroeder'
                          email: duncan17@example.net
                          isManager: false
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/2'
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Josue Osinski DDS'
                          email: orie23@example.net
                          isManager: false
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/3'
                      -
                        type: user
                        id: 4
                        attributes:
                          name: 'Cullen Braun'
                          email: vjast@example.com
                          isManager: false
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/4'
                      -
                        type: user
                        id: 5
                        attributes:
                          name: 'Dr. Michele Wilkinson'
                          email: clara.smith@example.com
                          isManager: false
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/5'
                      -
                        type: user
                        id: 6
                        attributes:
                          name: 'Arlo Prosacco'
                          email: qlakin@example.org
                          isManager: false
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/6'
                      -
                        type: user
                        id: 7
                        attributes:
                          name: 'Bernice Schulist II'
                          email: mcclure.branson@example.com
                          isManager: false
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/7'
                      -
                        type: user
                        id: 8
                        attributes:
                          name: 'Dr. Dino Price III'
                          email: jenkins.delta@example.net
                          isManager: false
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/8'
                      -
                        type: user
                        id: 9
                        attributes:
                          name: 'Hilton Cummerata'
                          email: emma.cummerata@example.com
                          isManager: false
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/9'
                      -
                        type: user
                        id: 10
                        attributes:
                          name: 'Katlyn Hansen'
                          email: garret.osinski@example.net
                          isManager: false
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/10'
                      -
                        type: user
                        id: 11
                        attributes:
                          name: 'The manager'
                          email: manager@test.com
                          isManager: true
                        links:
                          self: 'http://tickets-please.laravel/api/v1/authors/11'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Karlie Langworth'
                            email:
                              type: string
                              example: ohara.johnathan@example.org
                            isManager:
                              type: boolean
                              example: false
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://tickets-please.laravel/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://tickets-please.laravel/api/v1/users?page=1'
                      last:
                        type: string
                        example: 'http://tickets-please.laravel/api/v1/users?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://tickets-please.laravel/api/v1/users?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://tickets-please.laravel/api/v1/users'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 11
                      total:
                        type: integer
                        example: 11
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        name:
                          type: string
                          description: ''
                          example: deleniti
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: nkuhlman@example.net
                        isManager:
                          type: boolean
                          description: ''
                          example: false
                        password:
                          type: string
                          description: ''
                          example: 'b#obWUbA_)n*iI'
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Karlie Langworth'
                      email: ohara.johnathan@example.org
                      isManager: false
                    links:
                      self: 'http://tickets-please.laravel/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Karlie Langworth'
                          email:
                            type: string
                            example: ohara.johnathan@example.org
                          isManager:
                            type: boolean
                            example: false
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://tickets-please.laravel/api/v1/authors/1'
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/users/{user}':
    put:
      summary: ''
      operationId: putApiV1UsersUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        name:
                          type: string
                          description: ''
                          example: labore
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: florencio34@example.org
                        isManager:
                          type: boolean
                          description: ''
                          example: false
                        password:
                          type: string
                          description: ''
                          example: 'R:ohN#RxdT)Soj_p'
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        name:
                          type: string
                          description: ''
                          example: modi
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: chet.paucek@example.org
                        isManager:
                          type: boolean
                          description: ''
                          example: false
                        password:
                          type: string
                          description: ''
                          example: "9I_cC|$7zs2o'3[?V't+"
    parameters:
      -
        in: path
        name: user
        description: 'The user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/authors:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Endpoints
  '/api/v1/authors/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Karlie Langworth'
                      email: ohara.johnathan@example.org
                      isManager: false
                      emailVerifiedAt: '2024-07-16T08:48:44.000000Z'
                      createAt: '2024-07-16T08:48:45.000000Z'
                      updatedAt: '2024-07-16T08:48:45.000000Z'
                    links:
                      self: 'http://tickets-please.laravel/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Karlie Langworth'
                          email:
                            type: string
                            example: ohara.johnathan@example.org
                          isManager:
                            type: boolean
                            example: false
                          emailVerifiedAt:
                            type: string
                            example: '2024-07-16T08:48:44.000000Z'
                          createAt:
                            type: string
                            example: '2024-07-16T08:48:45.000000Z'
                          updatedAt:
                            type: string
                            example: '2024-07-16T08:48:45.000000Z'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://tickets-please.laravel/api/v1/authors/1'
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author_id}/tickets':
    get:
      summary: ''
      operationId: getApiV1AuthorsAuthor_idTickets
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://tickets-please.laravel/api/v1/authors/fugit/tickets?page=1'
                    last: 'http://tickets-please.laravel/api/v1/authors/fugit/tickets?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://tickets-please.laravel/api/v1/authors/fugit/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://tickets-please.laravel/api/v1/authors/fugit/tickets'
                    per_page: 15
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://tickets-please.laravel/api/v1/authors/fugit/tickets?page=1'
                      last:
                        type: string
                        example: 'http://tickets-please.laravel/api/v1/authors/fugit/tickets?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://tickets-please.laravel/api/v1/authors/fugit/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://tickets-please.laravel/api/v1/authors/fugit/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: blanditiis
                        description:
                          type: string
                          description: ''
                          example: 'Quos aut vel labore dolorem.'
                        status:
                          type: string
                          description: ''
                          example: A
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 15
              required:
                - data
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: fugit
        required: true
        schema:
          type: string
  '/api/v1/authors/{author_id}/tickets/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: occaecati
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{ahthor}/tickets/{ticket}':
    put:
      summary: ''
      operationId: putApiV1AuthorsAhthorTicketsTicket
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: eligendi
                        description:
                          type: string
                          description: ''
                          example: 'Rem et vero culpa quia fugiat.'
                        status:
                          type: string
                          description: ''
                          example: C
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 7
    patch:
      summary: ''
      operationId: patchApiV1AuthorsAhthorTicketsTicket
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: illum
                        description:
                          type: string
                          description: ''
                          example: 'Distinctio adipisci earum eum repellendus.'
                        status:
                          type: string
                          description: ''
                          example: X
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 13
    parameters:
      -
        in: path
        name: ahthor
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: ticket
        description: 'The ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/user:
    get:
      summary: ''
      operationId: getApiV1User
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 11
                  name: 'The manager'
                  email: manager@test.com
                  email_verified_at: '2024-07-16T08:48:53.000000Z'
                  is_manager: true
                  created_at: '2024-07-16T08:48:53.000000Z'
                  updated_at: '2024-07-16T08:48:53.000000Z'
                properties:
                  id:
                    type: integer
                    example: 11
                  name:
                    type: string
                    example: 'The manager'
                  email:
                    type: string
                    example: manager@test.com
                  email_verified_at:
                    type: string
                    example: '2024-07-16T08:48:53.000000Z'
                  is_manager:
                    type: boolean
                    example: true
                  created_at:
                    type: string
                    example: '2024-07-16T08:48:53.000000Z'
                  updated_at:
                    type: string
                    example: '2024-07-16T08:48:53.000000Z'
      tags:
        - Endpoints
  /api/v1/tickets:
    get:
      summary: 'Get all tickets'
      operationId: getAllTickets
      description: ''
      parameters:
        -
          in: query
          name: sort
          description: 'Data field(s) to sort by. Separate multiple fields with commas.'
          example: 'sort=title,-created_at'
          required: false
          schema:
            type: string
            description: 'Data field(s) to sort by. Separate multiple fields with commas.'
            example: 'sort=title,-created_at'
        -
          in: query
          name: 'filter[status]'
          description: 'Filter by status code: A, C, H, X.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by status code: A, C, H, X.'
            example: null
        -
          in: query
          name: 'filter[title]'
          description: 'Filter by title. Wildcards are supported.'
          example: '*fix*'
          required: false
          schema:
            type: string
            description: 'Filter by title. Wildcards are supported.'
            example: '*fix*'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: ticket
                      id: 97
                      attributes:
                        title: 'hic ducimus consequatur'
                        status: A
                        createdAt: '2024-07-16T08:48:53.000000Z'
                        updatedAt: '2024-07-16T08:48:53.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/10'
                          data:
                            type: user
                            id: 10
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/97'
                    -
                      type: ticket
                      id: 98
                      attributes:
                        title: 'rerum dolor fuga'
                        status: C
                        createdAt: '2024-07-16T08:48:53.000000Z'
                        updatedAt: '2024-07-16T08:48:53.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/5'
                          data:
                            type: user
                            id: 5
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/98'
                    -
                      type: ticket
                      id: 99
                      attributes:
                        title: 'exercitationem et sit'
                        status: X
                        createdAt: '2024-07-16T08:48:53.000000Z'
                        updatedAt: '2024-07-16T08:48:53.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/6'
                          data:
                            type: user
                            id: 6
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/99'
                    -
                      type: ticket
                      id: 100
                      attributes:
                        title: 'ipsum eos labore'
                        status: A
                        createdAt: '2024-07-16T08:48:53.000000Z'
                        updatedAt: '2024-07-16T08:48:53.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/6'
                          data:
                            type: user
                            id: 6
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/100'
                    -
                      type: ticket
                      id: 84
                      attributes:
                        title: 'repellat earum autem'
                        status: X
                        createdAt: '2024-07-16T08:48:52.000000Z'
                        updatedAt: '2024-07-16T08:48:52.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/1'
                          data:
                            type: user
                            id: 1
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/84'
                    -
                      type: ticket
                      id: 85
                      attributes:
                        title: 'quia beatae autem'
                        status: H
                        createdAt: '2024-07-16T08:48:52.000000Z'
                        updatedAt: '2024-07-16T08:48:52.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/10'
                          data:
                            type: user
                            id: 10
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/85'
                    -
                      type: ticket
                      id: 86
                      attributes:
                        title: 'voluptas vero eligendi'
                        status: C
                        createdAt: '2024-07-16T08:48:52.000000Z'
                        updatedAt: '2024-07-16T08:48:52.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/8'
                          data:
                            type: user
                            id: 8
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/86'
                    -
                      type: ticket
                      id: 87
                      attributes:
                        title: 'nesciunt ut nisi'
                        status: A
                        createdAt: '2024-07-16T08:48:52.000000Z'
                        updatedAt: '2024-07-16T08:48:52.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/8'
                          data:
                            type: user
                            id: 8
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/87'
                    -
                      type: ticket
                      id: 88
                      attributes:
                        title: 'neque nihil iste'
                        status: A
                        createdAt: '2024-07-16T08:48:52.000000Z'
                        updatedAt: '2024-07-16T08:48:52.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/3'
                          data:
                            type: user
                            id: 3
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/88'
                    -
                      type: ticket
                      id: 89
                      attributes:
                        title: 'qui voluptate maxime'
                        status: H
                        createdAt: '2024-07-16T08:48:52.000000Z'
                        updatedAt: '2024-07-16T08:48:52.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/9'
                          data:
                            type: user
                            id: 9
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/89'
                    -
                      type: ticket
                      id: 90
                      attributes:
                        title: 'quibusdam neque ut'
                        status: X
                        createdAt: '2024-07-16T08:48:52.000000Z'
                        updatedAt: '2024-07-16T08:48:52.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/10'
                          data:
                            type: user
                            id: 10
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/90'
                    -
                      type: ticket
                      id: 91
                      attributes:
                        title: 'enim soluta quam'
                        status: A
                        createdAt: '2024-07-16T08:48:52.000000Z'
                        updatedAt: '2024-07-16T08:48:52.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/3'
                          data:
                            type: user
                            id: 3
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/91'
                    -
                      type: ticket
                      id: 92
                      attributes:
                        title: 'perferendis quisquam voluptates'
                        status: A
                        createdAt: '2024-07-16T08:48:52.000000Z'
                        updatedAt: '2024-07-16T08:48:52.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/3'
                          data:
                            type: user
                            id: 3
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/92'
                    -
                      type: ticket
                      id: 93
                      attributes:
                        title: 'provident error magni'
                        status: X
                        createdAt: '2024-07-16T08:48:52.000000Z'
                        updatedAt: '2024-07-16T08:48:52.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/10'
                          data:
                            type: user
                            id: 10
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/93'
                    -
                      type: ticket
                      id: 94
                      attributes:
                        title: 'numquam reprehenderit consequuntur'
                        status: X
                        createdAt: '2024-07-16T08:48:52.000000Z'
                        updatedAt: '2024-07-16T08:48:52.000000Z'
                      relationships:
                        author:
                          links:
                            self: 'http://tickets-please.laravel/api/v1/authors/5'
                          data:
                            type: user
                            id: 5
                      links:
                        self: 'http://tickets-please.laravel/api/v1/tickets/94'
                  links:
                    first: 'http://tickets-please.laravel/api/v1/tickets?page=1'
                    last: 'http://tickets-please.laravel/api/v1/tickets?page=7'
                    prev: null
                    next: 'http://tickets-please.laravel/api/v1/tickets?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 7
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://tickets-please.laravel/api/v1/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://tickets-please.laravel/api/v1/tickets?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://tickets-please.laravel/api/v1/tickets?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://tickets-please.laravel/api/v1/tickets?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://tickets-please.laravel/api/v1/tickets?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://tickets-please.laravel/api/v1/tickets?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://tickets-please.laravel/api/v1/tickets?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://tickets-please.laravel/api/v1/tickets?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://tickets-please.laravel/api/v1/tickets'
                    per_page: 15
                    to: 15
                    total: 100
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: ticket
                        id: 97
                        attributes:
                          title: 'hic ducimus consequatur'
                          status: A
                          createdAt: '2024-07-16T08:48:53.000000Z'
                          updatedAt: '2024-07-16T08:48:53.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/10'
                            data:
                              type: user
                              id: 10
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/97'
                      -
                        type: ticket
                        id: 98
                        attributes:
                          title: 'rerum dolor fuga'
                          status: C
                          createdAt: '2024-07-16T08:48:53.000000Z'
                          updatedAt: '2024-07-16T08:48:53.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/5'
                            data:
                              type: user
                              id: 5
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/98'
                      -
                        type: ticket
                        id: 99
                        attributes:
                          title: 'exercitationem et sit'
                          status: X
                          createdAt: '2024-07-16T08:48:53.000000Z'
                          updatedAt: '2024-07-16T08:48:53.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/6'
                            data:
                              type: user
                              id: 6
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/99'
                      -
                        type: ticket
                        id: 100
                        attributes:
                          title: 'ipsum eos labore'
                          status: A
                          createdAt: '2024-07-16T08:48:53.000000Z'
                          updatedAt: '2024-07-16T08:48:53.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/6'
                            data:
                              type: user
                              id: 6
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/100'
                      -
                        type: ticket
                        id: 84
                        attributes:
                          title: 'repellat earum autem'
                          status: X
                          createdAt: '2024-07-16T08:48:52.000000Z'
                          updatedAt: '2024-07-16T08:48:52.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/1'
                            data:
                              type: user
                              id: 1
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/84'
                      -
                        type: ticket
                        id: 85
                        attributes:
                          title: 'quia beatae autem'
                          status: H
                          createdAt: '2024-07-16T08:48:52.000000Z'
                          updatedAt: '2024-07-16T08:48:52.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/10'
                            data:
                              type: user
                              id: 10
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/85'
                      -
                        type: ticket
                        id: 86
                        attributes:
                          title: 'voluptas vero eligendi'
                          status: C
                          createdAt: '2024-07-16T08:48:52.000000Z'
                          updatedAt: '2024-07-16T08:48:52.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/8'
                            data:
                              type: user
                              id: 8
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/86'
                      -
                        type: ticket
                        id: 87
                        attributes:
                          title: 'nesciunt ut nisi'
                          status: A
                          createdAt: '2024-07-16T08:48:52.000000Z'
                          updatedAt: '2024-07-16T08:48:52.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/8'
                            data:
                              type: user
                              id: 8
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/87'
                      -
                        type: ticket
                        id: 88
                        attributes:
                          title: 'neque nihil iste'
                          status: A
                          createdAt: '2024-07-16T08:48:52.000000Z'
                          updatedAt: '2024-07-16T08:48:52.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/3'
                            data:
                              type: user
                              id: 3
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/88'
                      -
                        type: ticket
                        id: 89
                        attributes:
                          title: 'qui voluptate maxime'
                          status: H
                          createdAt: '2024-07-16T08:48:52.000000Z'
                          updatedAt: '2024-07-16T08:48:52.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/9'
                            data:
                              type: user
                              id: 9
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/89'
                      -
                        type: ticket
                        id: 90
                        attributes:
                          title: 'quibusdam neque ut'
                          status: X
                          createdAt: '2024-07-16T08:48:52.000000Z'
                          updatedAt: '2024-07-16T08:48:52.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/10'
                            data:
                              type: user
                              id: 10
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/90'
                      -
                        type: ticket
                        id: 91
                        attributes:
                          title: 'enim soluta quam'
                          status: A
                          createdAt: '2024-07-16T08:48:52.000000Z'
                          updatedAt: '2024-07-16T08:48:52.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/3'
                            data:
                              type: user
                              id: 3
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/91'
                      -
                        type: ticket
                        id: 92
                        attributes:
                          title: 'perferendis quisquam voluptates'
                          status: A
                          createdAt: '2024-07-16T08:48:52.000000Z'
                          updatedAt: '2024-07-16T08:48:52.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/3'
                            data:
                              type: user
                              id: 3
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/92'
                      -
                        type: ticket
                        id: 93
                        attributes:
                          title: 'provident error magni'
                          status: X
                          createdAt: '2024-07-16T08:48:52.000000Z'
                          updatedAt: '2024-07-16T08:48:52.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/10'
                            data:
                              type: user
                              id: 10
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/93'
                      -
                        type: ticket
                        id: 94
                        attributes:
                          title: 'numquam reprehenderit consequuntur'
                          status: X
                          createdAt: '2024-07-16T08:48:52.000000Z'
                          updatedAt: '2024-07-16T08:48:52.000000Z'
                        relationships:
                          author:
                            links:
                              self: 'http://tickets-please.laravel/api/v1/authors/5'
                            data:
                              type: user
                              id: 5
                        links:
                          self: 'http://tickets-please.laravel/api/v1/tickets/94'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: ticket
                        id:
                          type: integer
                          example: 97
                        attributes:
                          type: object
                          properties:
                            title:
                              type: string
                              example: 'hic ducimus consequatur'
                            status:
                              type: string
                              example: A
                            createdAt:
                              type: string
                              example: '2024-07-16T08:48:53.000000Z'
                            updatedAt:
                              type: string
                              example: '2024-07-16T08:48:53.000000Z'
                        relationships:
                          type: object
                          properties:
                            author:
                              type: object
                              properties:
                                links:
                                  type: object
                                  properties:
                                    self:
                                      type: string
                                      example: 'http://tickets-please.laravel/api/v1/authors/10'
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: user
                                    id:
                                      type: integer
                                      example: 10
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://tickets-please.laravel/api/v1/tickets/97'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://tickets-please.laravel/api/v1/tickets?page=1'
                      last:
                        type: string
                        example: 'http://tickets-please.laravel/api/v1/tickets?page=7'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://tickets-please.laravel/api/v1/tickets?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 7
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://tickets-please.laravel/api/v1/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://tickets-please.laravel/api/v1/tickets?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://tickets-please.laravel/api/v1/tickets?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://tickets-please.laravel/api/v1/tickets?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://tickets-please.laravel/api/v1/tickets?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://tickets-please.laravel/api/v1/tickets?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://tickets-please.laravel/api/v1/tickets?page=7'
                            label: '7'
                            active: false
                          -
                            url: 'http://tickets-please.laravel/api/v1/tickets?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://tickets-please.laravel/api/v1/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 15
                      total:
                        type: integer
                        example: 100
      tags:
        - 'Managing Tickets'
    post:
      summary: 'Create a ticket'
      operationId: createATicket
      description: 'Creates a new ticket. Users can only create tickets for themselves. Managers can create tickets for any user.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      properties:
                        title:
                          type: string
                          description: ''
                          example: odit
                        description:
                          type: string
                          description: ''
                          example: 'Aut in qui aut nobis quas est alias.'
                        status:
                          type: string
                          description: ''
                          example: H
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 19
              required:
                - data
tags:
  -
    name: Authentication
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Managing Tickets'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
